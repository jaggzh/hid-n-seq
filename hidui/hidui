#!/usr/bin/perl

use strict;
use warnings;
use FindBin;
use Carp 'confess';
$SIG{__DIE__} = sub { confess @_ };

use lib "$FindBin::Bin/lib";

use Getopt::Long;
use HIDUI::Core;
use HIDUI::UI::Manager;
use HIDUI::EventServer;

# Parse command line options
my $config_dir = "$FindBin::Bin/config";
my $port = 9876;
my $enable_server = 1;

GetOptions(
    'config=s' => \$config_dir,
    'port=i' => \$port,
    'server!' => \$enable_server,
) or die "Usage: $0 [--config DIR] [--port PORT] [--no-server]\n";

# Initialize HIDUI
my $hidui = HIDUI::Core->new(config_dir => $config_dir);

# Register any custom actions here
$hidui->register_action(
    id => 'custom_scroll_down',
    label => 'Custom: Scroll Down 10x',
    group => 'custom_actions',
    handler => sub {
        my ($core, $event, $action, $params) = @_;
        system('xdotool', 'key', '--repeat', '10', 'Down');
    }
);

# Initialize UI
my $ui_manager = HIDUI::UI::Manager->new(core => $hidui);

# Start TCP event server if requested
my $event_server;
if ($enable_server) {
    $event_server = HIDUI::EventServer->new(
        core => $hidui,
        port => $port
    );
    $event_server->start();
}

print "HIDUI initialized.\n";
print "Waiting for gesture events...\n";
print "\nTo test manually, you can call:\n";
print "  \$hidui->event('longlongpress');  # Open main UI\n";
print "  \$hidui->event('click');           # Desktop: left click (or UI: navigate)\n";
print "  \$hidui->event('doubleclick');     # Desktop: right click (or UI: activate)\n";
print "\n";

if ($enable_server) {
    print "Event server listening on localhost:$port\n";
    print "Send events via TCP, e.g.: echo 'longlongpress' | nc localhost $port\n";
} else {
    print "Event server disabled (--no-server)\n";
}

print "\nWaiting for events...\n";

# Start Tk event loop
$hidui->run();

# vim: et ts=4 sts=4 sw=4
